---
# Source: koci/charts/notification-service/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: koci-notification-service
  labels:
    helm.sh/chart: notification-service-0.1.0
    app.kubernetes.io/name: notification-service
    app.kubernetes.io/instance: koci
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
data:
  null
---
# Source: koci/charts/main-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: koci-main-api
  namespace: koci
  labels:
    helm.sh/chart: main-api-0.1.0
    app.kubernetes.io/name: main-api
    app.kubernetes.io/instance: koci # Use the umbrella release name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: main-api
    app.kubernetes.io/part-of: koci # Use the umbrella release name
spec:
  type: ClusterIP
  ports:
    - port: 2500
      targetPort: 8080 # Can be number or name (e.g., 'http')
      protocol: TCP
      name: http # Name of the port
  selector:
    app.kubernetes.io/name: main-api
    app.kubernetes.io/instance: koci # Use the umbrella release name
---
# Source: koci/charts/notification-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: koci-notification-service
  labels:
    helm.sh/chart: notification-service-0.1.0
    app.kubernetes.io/name: notification-service
    app.kubernetes.io/instance: koci
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 2502
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: notification-service
    app.kubernetes.io/instance: koci
---
# Source: koci/charts/main-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: koci-main-api
  namespace: koci # Use global namespace
  labels:
    helm.sh/chart: main-api-0.1.0
    app.kubernetes.io/name: main-api
    app.kubernetes.io/instance: koci # Use the umbrella release name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: main-api
    app.kubernetes.io/part-of: koci # Use the umbrella release name
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: main-api
      app.kubernetes.io/instance: koci # Use the umbrella release name
  template:
    metadata:
      annotations:
        {}
      labels:
        app.kubernetes.io/name: main-api
        app.kubernetes.io/instance: koci # Use the umbrella release name
    spec:
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: main-api
          securityContext:
            {}
          image: "k8s-test/main-api:1.0.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http # Named port for service/probes
              containerPort: 8080
              protocol: TCP
          env:
            # Non-secret config from this chart's values
            - name: LOG_LEVEL
              value: "info"
            # Global environment setting
            - name: APP_ENV
              value: "dev"

            # --- Database Connection Env Vars ---

            # --- MongoDB Connection Env Vars ---

            # --- RabbitMQ Connection Env Vars (EXAMPLE) --- # End RabbitMQ Connection

          # Mount secrets managed by Doppler Operator (if doppler enabled for this service)
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health_check
              port: http
            initialDelaySeconds: 15
            periodSeconds: 20
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health_check
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
          resources:
            {}
---
# Source: koci/charts/notification-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: koci-notification-service
  labels:
    helm.sh/chart: notification-service-0.1.0
    app.kubernetes.io/name: notification-service
    app.kubernetes.io/instance: koci
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: notification-service
      app.kubernetes.io/instance: koci
  template:
    metadata:
      labels:
        app.kubernetes.io/name: notification-service
        app.kubernetes.io/instance: koci
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
        - name: notification-service
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          image: "k8s-test/notification-service:1.0.0"
          imagePullPolicy: IfNotPresent
          env:
            # Add RabbitMQ environment variables
            - name: RABBITMQ_HOST
              value: "rabbitmq"
            - name: RABBITMQ_PORT
              value: "5672"
            - name: RABBITMQ_USERNAME
              valueFrom:
                secretKeyRef:
                  name: koci-notification-service-rabbitmq
                  key: "RABBITMQ_USERNAME"
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: koci-notification-service-rabbitmq
                  key: "RABBITMQ_PASSWORD"
            - name: RABBITMQ_VHOST
              value: "/"
            # Add Redis environment variables
            - name: REDIS_HOST
              value: "redis"
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: koci-notification-service-redis
                  key: redis-password
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 15
            periodSeconds: 20
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz
              port: http
            periodSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
---
# Source: koci/charts/notification-service/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "koci-notification-service-test-connection"
  namespace: koci
  labels:
    helm.sh/chart: notification-service-0.1.0
    app.kubernetes.io/name: notification-service
    app.kubernetes.io/instance: koci
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['koci-notification-service:2502/healthz']
  restartPolicy: Never
