apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "notification-service-redis.fullname" . }}-deployment
  labels:
    app: {{ include "notification-service-redis.name" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "notification-service-redis.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "notification-service-redis.name" . }}
    spec:
      securityContext:
        {{- if .Values.securityContext.enabled }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
        runAsUser: {{ .Values.securityContext.runAsUser }}
        {{- end }}
      containers:
        - name: redis
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
          securityContext:
            {{- if .Values.containerSecurityContext.enabled }}
            runAsNonRoot: {{ .Values.containerSecurityContext.runAsNonRoot }}
            runAsUser: {{ .Values.containerSecurityContext.runAsUser }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: redis-storage
              mountPath: /data
          livenessProbe:
            {{- if .Values.livenessProbe.enabled }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            tcpSocket:
              port: {{ .Values.service.port }}
            {{- end }}
          readinessProbe:
            {{- if .Values.readinessProbe.enabled }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            tcpSocket:
              port: {{ .Values.service.port }}
            {{- end }}
      volumes:
        - name: redis-storage
          persistentVolumeClaim:
            claimName: {{ include "notification-service-redis.fullname" . }}-pvc
