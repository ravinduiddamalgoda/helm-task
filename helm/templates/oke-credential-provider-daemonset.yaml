{{- if and .Values.global.oci.enabled .Values.global.oci.credentialProvider.enabled }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Release.Name }}-oke-credential-provider-installer
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/component: credential-provider-installer
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: oke-credential-provider-installer
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: oke-credential-provider-installer
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        configmap/checksum: {{ include (print $.Template.BasePath "/credential-provider-config.yaml") . | sha256sum }}
    spec:
      serviceAccountName: {{ .Release.Name }}-registry-sa
      hostNetwork: true
      hostPID: true
      tolerations:
        - operator: Exists
      initContainers:
        - name: setup-credential-provider
          image: busybox:1.35
          command:
            - /bin/sh
            - -c
            - |
              set -e
              
              echo "Setting up OKE credential provider..."
              
              # Create directories if they don't exist
              mkdir -p /host/usr/local/bin
              mkdir -p /host/etc/kubernetes
              
              # Detect architecture
              if [ "$(uname -m)" = "aarch64" ]; then
                ARCH="arm64"
              else
                ARCH="amd64"
              fi
              
              # Check if binary already exists and is recent
              BINARY_PATH="/host/usr/local/bin/credential-provider-oke"
              DOWNLOAD_BINARY=true
              
              if [ -f "$BINARY_PATH" ]; then
                # Check if binary is less than 24 hours old
                if [ "$(find "$BINARY_PATH" -mtime -1)" ]; then
                  echo "Binary exists and is recent, skipping download"
                  DOWNLOAD_BINARY=false
                fi
              fi
              
              if [ "$DOWNLOAD_BINARY" = "true" ]; then
                echo "Downloading OKE credential provider for $ARCH..."
                cd /tmp
                
                # Download with retry logic
                RETRY_COUNT=0
                MAX_RETRIES=3
                
                while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
                  if wget -q --timeout=30 \
                    "https://github.com/oracle-devrel/oke-credential-provider-for-ocir/releases/latest/download/oke-credential-provider-for-ocir-linux-$ARCH" \
                    -O "$BINARY_PATH"; then
                    echo "Download successful"
                    break
                  else
                    RETRY_COUNT=$((RETRY_COUNT + 1))
                    echo "Download failed, retry $RETRY_COUNT/$MAX_RETRIES"
                    sleep 5
                  fi
                done
                
                if [ $RETRY_COUNT -eq $MAX_RETRIES ]; then
                  echo "Failed to download binary after $MAX_RETRIES retries"
                  exit 1
                fi
                
                # Make it executable
                chmod 755 "$BINARY_PATH"
                echo "Binary installed and made executable"
              fi
              
              # Always update the configuration file
              echo "Copying credential provider configuration..."
              cp /config/credential-provider-config.yaml /host/etc/kubernetes/
              
              echo "OKE credential provider setup completed successfully"
          volumeMounts:
            - name: host-usr-local-bin
              mountPath: /host/usr/local/bin
            - name: host-etc-kubernetes
              mountPath: /host/etc/kubernetes
            - name: credential-provider-config
              mountPath: /config
          securityContext:
            privileged: true
      containers:
        - name: credential-provider-monitor
          image: busybox:1.35
          command:
            - /bin/sh
            - -c
            - |
              echo "OKE credential provider monitor started"
              echo "Monitoring credential provider binary and configuration..."
              
              while true; do
                # Check if binary exists and is executable
                if [ ! -x "/host/usr/local/bin/credential-provider-oke" ]; then
                  echo "WARNING: credential-provider-oke binary is missing or not executable"
                fi
                
                # Check if config exists
                if [ ! -f "/host/etc/kubernetes/credential-provider-config.yaml" ]; then
                  echo "WARNING: credential-provider-config.yaml is missing"
                fi
                
                sleep 300  # Check every 5 minutes
              done
          volumeMounts:
            - name: host-usr-local-bin
              mountPath: /host/usr/local/bin
              readOnly: true
            - name: host-etc-kubernetes
              mountPath: /host/etc/kubernetes
              readOnly: true
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
          resources:
            requests:
              cpu: 10m
              memory: 16Mi
            limits:
              cpu: 50m
              memory: 64Mi
      volumes:
        - name: host-usr-local-bin
          hostPath:
            path: /usr/local/bin
            type: DirectoryOrCreate
        - name: host-etc-kubernetes
          hostPath:
            path: /etc/kubernetes
            type: DirectoryOrCreate
        - name: credential-provider-config
          configMap:
            name: {{ .Release.Name }}-credential-provider-config
      nodeSelector:
        kubernetes.io/os: linux
{{- end }}
